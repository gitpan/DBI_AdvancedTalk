
<HTML>

<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for PowerPoint 97">
 <TITLE>SQL Portability - SQL Dialects</TITLE> 
</HEAD>

<BODY     >

 <H1>SQL Portability - SQL Dialects</H1> 
 <P><UL>
<LI><H2>Most people are familiar with how to portably quote a string literal:
</H2>
<UL>
$dbh-&#062quote($value)
<BR><UL>
<LI>
</UL></UL></UL><UL>
<LI><H2>It’s now also possible to portably quote identifiers like table names:
</H2>
<UL>
$dbh-&#062quote_identifier($name1, $name2, $name3, \%attr)
<BR><BR>For example:
<UL>
$dbh-&#062quote_identifier( undef, 'Her schema', 'My table' );
<BR><BR>using DBD::Oracle:		"Her schema"."My table”
<BR>using DBD::mysql:		`Her schema`.`My table`
</UL></UL></UL><UL>
<LI><H2>
</H2>
</UL><UL>
<LI><H2>If three names are supplied then the first is assumed to be a catalog name and special rules may be applied based on what get_info() returns for SQL_CATALOG_NAME_SEPARATOR and SQL_CATALOG_LOCATION.  For example:
</H2>
<UL>
$dbh-&#062quote_identifier( ’link’, ’schema’, ’table’ );
<BR><BR>using DBD::Oracle:		"schema"."table"@"link"</UL></UL></P>
<P></P> 
<P>
<TABLE>
  <TD HEIGHT=100 WIDTH=100> <A HREF="tsld078.htm">Previous slide</A> </TD>
  <TD HEIGHT=100 WIDTH=100> <A HREF="tsld080.htm">Next slide</A> </TD>
  <TD HEIGHT=100 WIDTH=150> <A HREF="tsld001.htm">Back to first slide</A> </TD>
  <TD HEIGHT=100 WIDTH=150> <A HREF="sld079.htm">View graphic version</A> </TD>
</TABLE>
<BR>
</P>



</Body>
</HTML>
