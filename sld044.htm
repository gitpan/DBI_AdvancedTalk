
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Custom Error Handling</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm">First</A>&nbsp;&nbsp;
         <A HREF="sld043.htm">Previous</A>&nbsp;&nbsp;
         <A HREF="sld045.htm">Next</A>&nbsp;&nbsp;
         <A HREF="sld093.htm">Last</A>&nbsp;&nbsp;
&nbsp;&nbsp;         <A HREF="index.htm">Index</A>&nbsp;&nbsp;
         <A HREF="dbi.perl.org">Home</A>&nbsp;&nbsp;
         <A HREF="tsld044.htm">Text</A>&nbsp;&nbsp;
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img044.gif" usemap="#Objmap" WIDTH=800 HEIGHT=600 BORDER=0>
     </TD> </TR>
</TABLE>
<P>Slide 44 of 93</P>
</CENTER>
<!-- <UL>
<H2>Custom Error Handling</H2>
</UL></P>
<P><UL>
<LI><H2>Don’t want to just Print or Raise an Error?
</H2>
<UL>
<LI>Now you can Handle it as well…
<UL>
$h-&#062{HandleError} = sub { … };
<BR><BR>
</UL></UL></UL><UL>
<LI><H2>The HandleError code
</H2>
<UL>
<LI>is called just before PrintError/RaiseError are handled
<LI>it’s passed
<UL>
<LI>the error message string that RaiseError/PrintError would use
<LI>the DBI handle being used
<LI>the first value being returned by the method that failed (typically undef)
</UL><LI>if it returns false then RaiseError/PrintError are checked and acted upon as normal
</UL></UL><UL>
<LI><H2>
</H2>
</UL><UL>
<LI><H2>The hander code can
</H2>
<UL>
<LI>alter the error message text by changing $_[0]
<LI>use caller() or Carp::confess() or similar to get a stack trace
<LI>use Exception or a similar module to throw a formal exception object</UL></UL></P>
<P>  -->
</Body>
</HTML>
